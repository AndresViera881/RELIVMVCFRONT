#pragma checksum "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "317fc53ccbe351401c6ba27eb1c4e5b25379c9de"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Producto_Index), @"mvc.1.0.view", @"/Views/Producto/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\_ViewImports.cshtml"
using RelivMVC;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\_ViewImports.cshtml"
using RelivMVC.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"317fc53ccbe351401c6ba27eb1c4e5b25379c9de", @"/Views/Producto/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"3b5c1a03ea3d6c8a00ee7337eb8b84349075d571", @"/Views/_ViewImports.cshtml")]
    public class Views_Producto_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<RelivMVC.Models.ViewModels.ProductoViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("addEstadoForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 3 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
   ViewData["Title"] = "Index"; 

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<h1>Index</h1>

<p>
    <!-- BotÃ³n para abrir el modal -->
    <button type=""button"" class=""btn btn-primary"" data-toggle=""modal"" data-target=""#addProductoModal"">Agregar</button>
</p>

<!-- Tabla para mostrar los productos -->
<table id=""productoTable"" class=""table"">
    <thead>
        <tr>
            <th>");
#nullable restore
#line 16 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Nombre));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n            <th>");
#nullable restore
#line 17 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Precio));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n            <th>");
#nullable restore
#line 18 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Stock));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n            <th>");
#nullable restore
#line 19 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Categoria));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n            <th>");
#nullable restore
#line 20 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
           Write(Html.DisplayNameFor(model => model.Estado));

#line default
#line hidden
#nullable disable
            WriteLiteral("</th>\r\n            <th>Acciones</th>\r\n        </tr>\r\n    </thead>\r\n    <tbody>\r\n");
#nullable restore
#line 25 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
         foreach (var item in Model)
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <tr>\r\n                <td>");
#nullable restore
#line 28 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Nombre));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 29 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Precio));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 30 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Stock));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 31 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Categoria));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td>");
#nullable restore
#line 32 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
               Write(Html.DisplayFor(modelItem => item.Estado));

#line default
#line hidden
#nullable disable
            WriteLiteral("</td>\r\n                <td>\r\n                    <button class=\"btn btn-link editEstadoBtn\"\r\n                            data-id=\"");
#nullable restore
#line 35 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                Write(item.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                            data-nombre=\"");
#nullable restore
#line 36 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                    Write(item.Nombre);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                            data-precio=\"");
#nullable restore
#line 37 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                    Write(item.Precio);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                            data-stock=\"");
#nullable restore
#line 38 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                   Write(item.Stock);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                            data-categoria-id=\"");
#nullable restore
#line 39 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                          Write(item.Categoria);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                            data-estado-id=\"");
#nullable restore
#line 40 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                       Write(item.Estado);

#line default
#line hidden
#nullable disable
            WriteLiteral("\"\r\n                            data-toggle=\"modal\"\r\n                            data-target=\"#addProductoModal\">\r\n                        Editar\r\n                    </button> |\r\n                    <button class=\"btn btn-danger deleteEstadoBtn\" data-id=\"");
#nullable restore
#line 45 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                                                       Write(item.Id);

#line default
#line hidden
#nullable disable
            WriteLiteral("\">Eliminar</button>\r\n                </td>\r\n            </tr>\r\n");
#nullable restore
#line 48 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral(@"    </tbody>
</table>

<!-- Modal para agregar o editar un Producto -->
<div class=""modal fade"" id=""addProductoModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""addProductoModalLabel"" aria-hidden=""true"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <h5 class=""modal-title"" id=""addProductoModalLabel"">Agregar Producto</h5>
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                    <span aria-hidden=""true"">&times;</span>
                </button>
            </div>
            <div class=""modal-body"">
                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "317fc53ccbe351401c6ba27eb1c4e5b25379c9de10910", async() => {
                WriteLiteral(@"
                    <input type=""hidden"" id=""productoId"" name=""Id"" />
                    <div class=""form-group"">
                        <label for=""nombre"">Nombre</label>
                        <input type=""text"" class=""form-control"" id=""nombre"" name=""Nombre"" required />
                    </div>

                    <div class=""form-group"">
                        <label for=""precio"">Precio</label>
                        <input type=""text"" class=""form-control"" id=""precio"" name=""Precio"" required pattern=""^\d+(\.\d{1,2})?$"" title=""Introduce un nÃºmero decimal, por ejemplo: 123.45"" maxlength=""9"" />
                    </div>

                    <div class=""form-group"">
                        <label for=""stock"">Stock</label>
                        <input type=""text"" class=""form-control"" id=""stock"" name=""Stock"" required pattern=""^\d+$"" title=""Introduce un nÃºmero entero."" maxlength=""5"" />
                    </div>

                    <div class=""form-group"">
                        <la");
                WriteLiteral("bel for=\"categoria\">CategorÃ­a</label>\r\n\r\n                        <select id=\"categoriaId\" name=\"CategoriaId\">\r\n                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "317fc53ccbe351401c6ba27eb1c4e5b25379c9de12432", async() => {
                    WriteLiteral("Seleccione una categorÃ­a");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>

                    <div class=""form-group"">
                        <label for=""estado"">Estado</label>
                        <select id=""estadoId"" name=""EstadoId"">
                            ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "317fc53ccbe351401c6ba27eb1c4e5b25379c9de13944", async() => {
                    WriteLiteral("Seleccione un estado");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                        </select>
                    </div>

                    <div class=""form-group"">
                        <label for=""fechaCreacion"">Fecha de CreaciÃ³n</label>
                        <input type=""date"" class=""form-control"" id=""fechaCreacion"" name=""FechaCreacion"" required readonly />
                    </div>
                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
            </div>
            <div class=""modal-footer"">
                <button type=""button"" class=""btn btn-secondary"" data-dismiss=""modal"">Cancelar</button>
                <button type=""button"" class=""btn btn-primary"" id=""saveEstadoBtn"">Guardar</button>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        $(document).ready(function () {

            $('#productoTable').DataTable({
                ""language"": {
                    ""url"": ""//cdn.datatables.net/plug-ins/1.11.5/i18n/Spanish.json""
                }
            });          

            document.getElementById('precio').addEventListener('input', function (e) {
                // Reemplaza cualquier carÃ¡cter que no sea un dÃ­gito o un punto
                this.value = this.value.replace(/[^0-9.]/g, '');
            });

            document.getElementById('stock').addEventListener('input', function (e) {
                // Reemplaza cualquier carÃ¡cter que no sea un dÃ­gito
                this.value = this.value.replace(/[^0-9]/g, '');
            });

            // Evento onchange para el select de categorÃ­a
            $('#categoriaId').on('change', function () {
                var categoriaId = $(this).val();
                console.log(""ID de la categorÃ­a seleccionada:"", categoriaId);

                /");
                WriteLiteral(@"/ AquÃ­ puedes agregar lÃ³gica adicional segÃºn lo necesites, como actualizar otros campos.
            });

            // Evento onchange para el select de categorÃ­a
            $('#estadoId').on('change', function () {
                var estadoId = $(this).val();
                console.log(""ID del estado seleccionado:"", estadoId);

                // AquÃ­ puedes agregar lÃ³gica adicional segÃºn lo necesites, como actualizar otros campos.
            });

            // FunciÃ³n para manejar la ediciÃ³n
            $('.editEstadoBtn').on('click', function () {
                var id = $(this).data('id');
                var nombre = $(this).data('nombre');
                var precio = $(this).data('precio');
                var stock = $(this).data('stock');
                var categoriaId = $(this).data('categoriaId');
                var estadoId = $(this).data('estadoId');

                // Establecer la fecha de modificacion como la fecha actual
                var fecha = new Date();
      ");
                WriteLiteral(@"          var anio = fecha.getFullYear();
                var mes = ('0' + (fecha.getMonth() + 1)).slice(-2); // Mes (0-11 asÃ­ que sumamos 1 y formateamos a dos dÃ­gitos)
                var dia = ('0' + fecha.getDate()).slice(-2); // DÃ­a
                var fechaModificacion = anio + '-' + mes + '-' + dia;

                $('#fechaModificacion').val(fechaModificacion);

                // Carga los datos en el modal
                $('#productoId').val(id);
                $('#nombre').val(nombre);
                $('#precio').val(precio);
                $('#stock').val(stock);
                $('#categoriaId').val(categoriaId);
                $('#estadoId').val(estadoId);

                // Establecer la fecha de creaciÃ³n como la fecha actual
                var fecha = new Date();
                var anio = fecha.getFullYear();
                var mes = ('0' + (fecha.getMonth() + 1)).slice(-2); // Mes (0-11 asÃ­ que sumamos 1 y formateamos a dos dÃ­gitos)
                var dia = ('0' ");
                WriteLiteral(@"+ fecha.getDate()).slice(-2); // DÃ­a
                var fechaModificacion = anio + '-' + mes + '-' + dia;

                $('#fechaCreacion').val('');
                $('#fechaModificacion').val(fechaModificacion);

                // Cambia el tÃ­tulo del modal
                $('#addProductoModalLabel').text('Editar Producto');
            });

            // FunciÃ³n para manejar la apertura del modal en modo agregar
            $('#addProductoModal').on('show.bs.modal', function (e) {


                $.ajax({
                    url: 'https://localhost:7186/api/Categoria/GetCategorias',
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        // AsegÃºrate de acceder a la propiedad 'data'
                        const categorias = response.data; // Accede a la lista de categorÃ­as
                        console.log('CategorÃ­as:', categorias); // Para verificar la estructura de los datos

      ");
                WriteLiteral(@"                  // Llenar el select con los datos obtenidos
                        $.each(categorias, function (index, categoria) {
                            $('#categoriaId').append($('<option>', {
                                value: categoria.id, // Propiedad 'id' de la categorÃ­a
                                text: categoria.descripcion // Propiedad 'descripcion' de la categorÃ­a
                            }));
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error al obtener las categorÃ­as:', error);
                    }
                });

                $.ajax({
                    url: 'https://localhost:7186/api/Estado/GetEstados',
                    type: 'GET',
                    dataType: 'json',
                    success: function (response) {
                        // AsegÃºrate de acceder a la propiedad 'data'
                        const estados = response.data");
                WriteLiteral(@"; // Accede a la lista de categorÃ­as
                        console.log('Estados:', estados); // Para verificar la estructura de los datos

                        // Llenar el select con los datos obtenidos
                        $.each(estados, function (index, estado) {
                            $('#estadoId').append($('<option>', {
                                value: estado.id, // Propiedad 'id' de la categorÃ­a
                                text: estado.descripcion // Propiedad 'descripcion' de la categorÃ­a
                            }));
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error('Error al obtener las categorÃ­as:', error);
                    }
                });



                var triggerButton = $(e.relatedTarget);
                if (triggerButton.hasClass('btn-primary')) { // Verifica si es el botÃ³n de ""Agregar""
                    // Limpia los campos del formul");
                WriteLiteral(@"ario
                    $('#productoId').val('');
                    $('#nombre').val('');
                    $('#precio').val('');
                    $('#stock').val('');
                    $('#categoriaId').val('');
                    $('#estadoId').val('');
                    $('#fechaCreacion').val('');

                    // Establece la fecha de creaciÃ³n como la fecha actual
                    var fecha = new Date();
                    var anio = fecha.getFullYear();
                    var mes = ('0' + (fecha.getMonth() + 1)).slice(-2); // Mes (0-11 asÃ­ que sumamos 1 y formateamos a dos dÃ­gitos)
                    var dia = ('0' + fecha.getDate()).slice(-2); // DÃ­a
                    var fechaCreacion = anio + '-' + mes + '-' + dia;
                    $('#fechaCreacion').val(fechaCreacion);
                    $('#fechaModificacion').val('');

                    $('#addProductoModalLabel').text('Agregar Producto');
                }
            });

            $('#saveEst");
                WriteLiteral(@"adoBtn').on('click', function () {
                var id = $('#productoId').val();
                var nombre = $('#nombre').val();
                var precio = $('#precio').val();
                var stock = $('#stock').val();
                var categoriaId = $('#categoriaId').val();
                var estadoId = $('#estadoId').val();
                var fechaCreacion = $('#fechaCreacion').val();

                var url = id ? `");
#nullable restore
#line 268 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                           Write(Url.Action("Put", "Producto"));

#line default
#line hidden
#nullable disable
                WriteLiteral("/${id}` : \'");
#nullable restore
#line 268 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                                                                    Write(Url.Action("Create", "Producto"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"';
                var method = id ? 'PUT' : 'POST';

                var data = {
                    id: id ? parseInt(id) : 0,
                    nombre: nombre,
                    precio: parseFloat(precio),
                    stock: parseInt(stock),
                    categoriaId: parseInt(categoriaId),
                    estadoId: parseInt(estadoId),
                    fechaCreacion: fechaCreacion,
                    fechaModificacion: ''
                };

                console.log('data', data);

                $.ajax({
                    url: url,
                    type: method,
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify(data),
                    success: function (result) {
                        if (result.success) {
                            $('#addProductoModal').modal('hide');
                            location.reload(); // Recarga la pÃ¡gina para mostrar los cambios
                    ");
                WriteLiteral(@"    } else {
                            alert(""Error al "" + (id ? 'actualizar' : 'crear') + "" el producto: "" + result.message);
                        }
                    },
                    error: function (xhr) {
                        alert(""Error en la solicitud: "" + xhr.responseText);
                    }
                });

            });

            $('.deleteEstadoBtn').on('click', function () {
                var id = $(this).data('id');
                if (confirm(""Â¿EstÃ¡s seguro de que quieres eliminar este producto?"")) {
                    $.ajax({
                        url: `");
#nullable restore
#line 308 "D:\Visual Studio\Net8\RelivMVC\RelivMVC\Views\Producto\Index.cshtml"
                         Write(Url.Action("Delete", "Producto"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"/${id}`,
                        type: 'DELETE',
                        success: function (result) {
                            if (result.success) {
                                location.reload(); // Recarga la pÃ¡gina para mostrar los cambios
                            } else {
                                alert(""Error al eliminar el producto: "" + result.message);
                            }
                        },
                        error: function (xhr) {
                            alert(""Error en la solicitud: "" + xhr.responseText);
                        }
                    });
                }
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<RelivMVC.Models.ViewModels.ProductoViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
